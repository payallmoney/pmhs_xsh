<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
	   xmlns:security="http://www.springframework.org/schema/security"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
                          http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.0.xsd
	   					 http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-2.0.1.xsd">

	<bean id="HelloService"
		class="cn.net.tongfang.framework.security.demo.service.SimpleServiceImpl">
		<aop:scoped-proxy />
	</bean>
	

	<bean id="springSecurityFilterChain" class="org.springframework.security.util.FilterChainProxy">
		<!--<property name="filterInvocationDefinitionSource">-->
			<!--<value><![CDATA[-->
				<!--CONVERT_URL_TO_LOWERCASE_BEFORE_COMPARISON-->
				<!--PATTERN_TYPE_APACHE_ANT-->
				<!--/**=httpSessionContextIntegrationFilter,logoutFilter,authenticationProcessingFilter,basicProcessingFilter,securityContextHolderAwareRequestFilter,rememberMeProcessingFilter,anonymousProcessingFilter,exceptionTranslationFilter,filterInvocationInterceptor-->
			<!--]]></value>-->
		<!--</property>-->
		<security:filter-chain-map path-type="ant">
			<security:filter-chain pattern="/css/**" filters="none" />
			<security:filter-chain pattern="/images/**" filters="none" />
			<security:filter-chain pattern="/js/**" filters="none" />
			<security:filter-chain pattern="/download/**" filters="none" />
			<!--<security:filter-chain pattern="/tasksystem/login.jsp" filters="none" />-->
			<!--<security:filter-chain pattern="/tasksystem/logout" filters="none" />-->
			<security:filter-chain pattern="/tasksystem/**"
								   filters="httpSessionContextIntegrationFilter,taskLogoutFilter,taskAuthenticationProcessingFilter,basicProcessingFilter,securityContextHolderAwareRequestFilter,rememberMeProcessingFilter,anonymousProcessingFilter,taskExceptionTranslationFilter,TaskFilterSecurityInterceptor" />
			<security:filter-chain pattern="/**"
								   filters="httpSessionContextIntegrationFilter,logoutFilter,authenticationProcessingFilter,basicProcessingFilter,securityContextHolderAwareRequestFilter,rememberMeProcessingFilter,anonymousProcessingFilter,exceptionTranslationFilter,filterInvocationInterceptor" />
		</security:filter-chain-map>
	</bean>

	<bean id="httpSessionContextIntegrationFilter" class="org.springframework.security.context.HttpSessionContextIntegrationFilter"/>

	<bean id="logoutFilter" class="org.springframework.security.ui.logout.LogoutFilter">
		<constructor-arg value="/login.jsp"/> <!-- URL redirected to after logout -->
		<constructor-arg>
			<list>
				<ref bean="rememberMeServices"/>
				<bean class="org.springframework.security.ui.logout.SecurityContextLogoutHandler"/>
			</list>
		</constructor-arg>
	</bean>
<!--
	<bean id="authenticationProcessingFilter" class="org.springframework.security.ui.webapp.AuthenticationProcessingFilter">
		<property name="authenticationManager" ref="authenticationManager"/>
		<property name="authenticationFailureUrl" value="/login.jsp?login_error=1"/>
		<property name="defaultTargetUrl" value="/admin"/>
		<property name="filterProcessesUrl" value="/j_spring_security_check"/>
		<property name="rememberMeServices" ref="rememberMeServices"/>
	</bean>

	-->
	<bean id="authenticationProcessingFilter" class="org.springframework.security.ui.webapp.AuthenticationProcessingFilter">
		<property name="authenticationManager" ref="authenticationManager"/>
		<property name="authenticationFailureUrl" value="/login.jsp?login_error=1"/>
		<property name="defaultTargetUrl" value="/admin"/>
		<property name="filterProcessesUrl" value="/j_spring_security_check"/>
		<property name="rememberMeServices" ref="rememberMeServices"/>
	</bean>

    <bean id="basicProcessingFilter" class="org.springframework.security.ui.basicauth.BasicProcessingFilter">
        <property name="authenticationManager"><ref local="authenticationManager"/></property>
        <property name="authenticationEntryPoint"><ref local="basicProcessingFilterEntryPoint"/></property>
    </bean>

    <bean id="basicProcessingFilterEntryPoint" class="org.springframework.security.ui.basicauth.BasicProcessingFilterEntryPoint">
        <property name="realmName"><value>My Realm</value></property>
    </bean>

	<bean id="securityContextHolderAwareRequestFilter" class="org.springframework.security.wrapper.SecurityContextHolderAwareRequestFilter"/>

	<bean id="rememberMeProcessingFilter" class="org.springframework.security.ui.rememberme.RememberMeProcessingFilter">
		<property name="authenticationManager" ref="authenticationManager"/>
		<property name="rememberMeServices" ref="rememberMeServices"/>
	</bean>

	<bean id="anonymousProcessingFilter" class="org.springframework.security.providers.anonymous.AnonymousProcessingFilter">
		<property name="key" value="changeThis"/>
		<property name="userAttribute" value="anonymousUser,ROLE_ANONYMOUS"/>
	</bean>

	<bean id="exceptionTranslationFilter" class="org.springframework.security.ui.ExceptionTranslationFilter">
		<property name="authenticationEntryPoint">
			<bean class="org.springframework.security.ui.webapp.AuthenticationProcessingFilterEntryPoint">
				<property name="loginFormUrl" value="/login.jsp"/>
				<property name="forceHttps" value="false"/>
			</bean>
		</property>
		<property name="accessDeniedHandler">
			<bean class="org.springframework.security.ui.AccessDeniedHandlerImpl">
				<property name="errorPage" value="/accessDenied.jsp"/>
			</bean>
		</property>
	</bean>

	<bean id="accessDecisionManager" class="org.springframework.security.vote.AffirmativeBased">
		<property name="allowIfAllAbstainDecisions" value="false"/>
		<property name="decisionVoters">
			<list>
				<bean class="org.springframework.security.vote.RoleVoter"/>
				<bean class="org.springframework.security.vote.AuthenticatedVoter"/>
			</list>
		</property>
	</bean>

	<bean id="filterInvocationInterceptor" class="org.springframework.security.intercept.web.FilterSecurityInterceptor">
		<property name="authenticationManager" ref="authenticationManager"/>
		<property name="accessDecisionManager" ref="accessDecisionManager"/>
		<property name="objectDefinitionSource">
			<value><![CDATA[
				CONVERT_URL_TO_LOWERCASE_BEFORE_COMPARISON
				PATTERN_TYPE_APACHE_ANT
				/secure/extreme/**=ROLE_SUPERVISOR
				/secure/**=IS_AUTHENTICATED_REMEMBERED
				/admin/**=IS_AUTHENTICATED_REMEMBERED
				/**=IS_AUTHENTICATED_ANONYMOUSLY
			]]></value>
		</property>
	</bean>




	<bean id="taskLogoutFilter" class="org.springframework.security.ui.logout.LogoutFilter">
		<constructor-arg value="/tasksystem/index.jsp"/> <!-- URL redirected to after logout -->
		<constructor-arg>
			<list>
				<ref bean="rememberMeServices"/>
				<bean class="org.springframework.security.ui.logout.SecurityContextLogoutHandler"/>
			</list>
		</constructor-arg>
		<property name="filterProcessesUrl" value="/tasksystem/logout" />
	</bean>

	<bean id="taskAuthenticationProcessingFilter" class="org.springframework.security.ui.webapp.AuthenticationProcessingFilter">
		<property name="authenticationManager" ref="authenticationManager"/>
		<property name="invalidateSessionOnSuccessfulAuthentication" value="true" />
		<property name="authenticationFailureUrl" value="/tasksystem/index.jsp?login_error=1"/>
		<property name="defaultTargetUrl" value="/tasksystem/lib/success.json"/>
		<!--<property name="alwaysUseDefaultTargetUrl" value="true"/>-->
		<property name="filterProcessesUrl" value="/tasksystem/login"/>
		<property name="rememberMeServices" ref="rememberMeServices"/>
	</bean>

	<bean id="taskExceptionTranslationFilter" class="org.springframework.security.ui.ExceptionTranslationFilter">
		<property name="authenticationEntryPoint">
			<bean class="org.springframework.security.ui.webapp.AuthenticationProcessingFilterEntryPoint">
				<property name="loginFormUrl" value="/tasksystem/index.jsp"/>
				<property name="forceHttps" value="false"/>
			</bean>
		</property>
		<property name="accessDeniedHandler">
			<bean class="org.springframework.security.ui.AccessDeniedHandlerImpl">
				<property name="errorPage" value="/tasksystem/index.jsp"/>
			</bean>
		</property>
	</bean>


	<bean id="TaskFilterSecurityInterceptor" class="org.springframework.security.intercept.web.FilterSecurityInterceptor">
		<property name="authenticationManager" ref="authenticationManager" />
		<property name="accessDecisionManager" ref="accessDecisionManager" />
		<property name="objectDefinitionSource">
			<security:filter-invocation-definition-source>
				<security:intercept-url pattern="/tasksystem/index.jsp" access="IS_AUTHENTICATED_ANONYMOUSLY" />
				<security:intercept-url pattern="/tasksystem/app/**" access="IS_AUTHENTICATED_ANONYMOUSLY" />
				<security:intercept-url pattern="/tasksystem/css/**" access="IS_AUTHENTICATED_ANONYMOUSLY" />
				<security:intercept-url pattern="/tasksystem/js/**" access="IS_AUTHENTICATED_ANONYMOUSLY" />
				<security:intercept-url pattern="/tasksystem/img/**" access="IS_AUTHENTICATED_ANONYMOUSLY" />
				<security:intercept-url pattern="/tasksystem/lib/**" access="IS_AUTHENTICATED_ANONYMOUSLY" />
				<security:intercept-url pattern="/tasksystem/**" access="IS_AUTHENTICATED_REMEMBERED" />
			</security:filter-invocation-definition-source>
		</property>
	</bean>


	<bean id="rememberMeServices" class="org.springframework.security.ui.rememberme.TokenBasedRememberMeServices">
		<property name="userDetailsService" ref="myUserDetailsService"/>
		<property name="key" value="changeThis"/>
	</bean>

	<bean id="authenticationManager" class="org.springframework.security.providers.ProviderManager">
		<property name="providers">
			<list>
				<ref local="daoAuthenticationProvider"/>
				<bean class="org.springframework.security.providers.anonymous.AnonymousAuthenticationProvider">
					<property name="key" value="changeThis"/>
				</bean>
				<bean class="org.springframework.security.providers.rememberme.RememberMeAuthenticationProvider">
					<property name="key" value="changeThis"/>
				</bean>
			</list>
		</property>
	</bean>

	<bean id="daoAuthenticationProvider" class="org.springframework.security.providers.dao.DaoAuthenticationProvider">
		<property name="userDetailsService" ref="myUserDetailsService"/>
		<property name="hideUserNotFoundExceptions">
			<value>false</value>
		</property>
		<property name="passwordEncoder" ref="passwordEncoder"/>
	</bean>

	<!-- This bean is optional; it isn't used by any other bean as it only listens and logs -->
	<bean id="loggerListener" class="org.springframework.security.event.authentication.LoggerListener"/>
	
	<bean id="passwordEncoder" class="org.springframework.security.providers.encoding.Md5PasswordEncoder">
		<property name="encodeHashAsBase64" value="false"></property>
	</bean>

	<bean id="TaskUtil"
		  class="cn.net.tongfang.web.service.task.TaskUtil" scope="singleton">
		<property name="sessionFactory" ref="sessionFactory"/>
		<property name="host" ><value>127.0.0.1</value></property>
		<property name="name" ><value>test</value></property>
		<property name="pwd" ><value>test</value></property>
		<property name="apiId" ><value>test</value></property>
		<property name="dbName" ><value>mas</value></property>
	</bean>
	<bean id="districtnumber" class="java.lang.String">
		<constructor-arg value="530521"/>
	</bean>
</beans>